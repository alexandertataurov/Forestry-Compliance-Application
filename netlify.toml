[build]
  # Directory to change to before starting a build
  base = "."
  
  # Directory that contains the deploy-ready HTML files and assets generated by the build
  publish = "dist"

  # Optimized build command with performance monitoring
  command = "npm run build:optimized && npm run build-storybook && cp -R storybook-static dist/storybook"

[build.environment]
  # Node.js version for optimal performance
  NODE_VERSION = "18"
  
  # NPM version for faster installs
  NPM_VERSION = "9"
  
  # Build optimization flags
  NODE_ENV = "production"
  VITE_APP_ENV = "production"
  
  # Enable build caching
  NPM_FLAGS = "--prefer-offline --no-audit"

# Redirect rules for Single Page Application (SPA)
[[redirects]]
  from = "/storybook/*"
  to = "/storybook/index.html"
  status = 200

[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Performance optimizations - Headers for caching and compression
[[headers]]
  for = "/*"
  [headers.values]
    # Security headers
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:;"
    
    # Performance headers
    X-DNS-Prefetch-Control = "on"
    X-Download-Options = "noopen"
    X-Permitted-Cross-Domain-Policies = "none"
    
    # Cache control for HTML files
    Cache-Control = "public, max-age=0, must-revalidate"

# Static assets caching - JavaScript files
[[headers]]
  for = "/js/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Encoding = "gzip"
    Vary = "Accept-Encoding"

# Static assets caching - CSS files
[[headers]]
  for = "/css/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Encoding = "gzip"
    Vary = "Accept-Encoding"

# Static assets caching - Images
[[headers]]
  for = "/images/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Encoding = "gzip"
    Vary = "Accept-Encoding"

# Static assets caching - Fonts
[[headers]]
  for = "/fonts/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Encoding = "gzip"
    Vary = "Accept-Encoding"

# Static assets caching - Other assets
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Encoding = "gzip"
    Vary = "Accept-Encoding"

# PWA manifest and service worker
[[headers]]
  for = "/manifest.json"
  [headers.values]
    Cache-Control = "public, max-age=86400"
    Content-Type = "application/manifest+json"

[[headers]]
  for = "/sw.js"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"
    Content-Type = "application/javascript"

# API routes (if any)
[[headers]]
  for = "/api/*"
  [headers.values]
    Cache-Control = "public, max-age=300"
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"
    Access-Control-Allow-Headers = "Content-Type, Authorization"

# Branch-specific deploy contexts
[context.production]
  command = "npm run build:production"
  environment = { NODE_ENV = "production", VITE_APP_ENV = "production" }
  
[context.deploy-preview]
  command = "npm run build:preview"
  environment = { NODE_ENV = "production", VITE_APP_ENV = "preview" }
  
[context.branch-deploy]
  command = "npm run build:staging"
  environment = { NODE_ENV = "production", VITE_APP_ENV = "staging" }

# Build optimization settings
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true

# Edge functions (if needed for API routes)
# [[edge_functions]]
#   function = "api"
#   path = "/api/*"

# Form handling (if needed)
# [[redirects]]
#   from = "/submit"
#   to = "/.netlify/functions/submit"
#   status = 200

# Custom error pages
[[redirects]]
  from = "/404"
  to = "/404.html"
  status = 404

[[redirects]]
  from = "/500"
  to = "/500.html"
  status = 500