import{j as i}from"./jsx-runtime-CDt2p4po.js";import{r as x}from"./index-GiUgBvb1.js";import{c as j}from"./index-BYJyBkN8.js";import{P}from"./index-BnncbVHi.js";import{c as R}from"./utils-CytzSlOG.js";import"./index-CROobee-.js";import"./index-BKGh1TIg.js";var d="Progress",c=100,[w,k]=j(d),[M,S]=w(d),N=x.forwardRef((r,e)=>{const{__scopeProgress:n,value:o=null,max:a,getValueLabel:$=V,...E}=r;(a||a===0)&&!p(a)&&console.error(A(`${a}`,"Progress"));const t=p(a)?a:c;o!==null&&!m(o,t)&&console.error(C(`${o}`,"Progress"));const s=m(o,t)?o:null,y=u(s)?$(s,t):void 0;return i.jsx(M,{scope:n,value:s,max:t,children:i.jsx(P.div,{"aria-valuemax":t,"aria-valuemin":0,"aria-valuenow":u(s)?s:void 0,"aria-valuetext":y,role:"progressbar","data-state":I(s,t),"data-value":s??void 0,"data-max":t,...E,ref:e})})});N.displayName=d;var b="ProgressIndicator",h=x.forwardRef((r,e)=>{const{__scopeProgress:n,...o}=r,a=S(b,n);return i.jsx(P.div,{"data-state":I(a.value,a.max),"data-value":a.value??void 0,"data-max":a.max,...o,ref:e})});h.displayName=b;function V(r,e){return`${Math.round(r/e*100)}%`}function I(r,e){return r==null?"indeterminate":r===e?"complete":"loading"}function u(r){return typeof r=="number"}function p(r){return u(r)&&!isNaN(r)&&r>0}function m(r,e){return u(r)&&!isNaN(r)&&r<=e&&r>=0}function A(r,e){return`Invalid prop \`max\` of value \`${r}\` supplied to \`${e}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${c}\`.`}function C(r,e){return`Invalid prop \`value\` of value \`${r}\` supplied to \`${e}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${c} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var D=N,L=h;function _({className:r,value:e,...n}){return i.jsx(D,{"data-slot":"progress",className:R("bg-primary/20 relative h-2 w-full overflow-hidden rounded-full",r),...n,children:i.jsx(L,{"data-slot":"progress-indicator",className:"bg-primary h-full w-full flex-1 transition-all",style:{transform:`translateX(-${100-(e||0)}%)`}})})}_.__docgenInfo={description:"",methods:[],displayName:"Progress"};const q={title:"UI/Progress",component:_,args:{value:33}},l={};var v,f,g;l.parameters={...l.parameters,docs:{...(v=l.parameters)==null?void 0:v.docs,source:{originalSource:"{}",...(g=(f=l.parameters)==null?void 0:f.docs)==null?void 0:g.source}}};const z=["Basic"];export{l as Basic,z as __namedExportsOrder,q as default};
